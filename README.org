#+title: Otherweb

* Otherweb

#+begin_html
<video src="https://user-images.githubusercontent.com/69144096/184963541-a879f0c3-8741-4035-bd48-1322b58e6b1b.mp4"></video>
#+end_html

** What is otherweb?
I mean this [[https://otherweb.com][this]]

[[file:images/Otherweb/_20220816_221410screenshot.png]]
** Motivation:
- Lightweight, fast (vs the web client built in react), built above the Org framework of Emacs,  you can you exploit full power of Emacs and org on this site data

** Custom variable

- Just like the web client, this package support  wide varieties of option to filter which type of new you want to receive
*** otherweb--sort
| recent | relevant | informative |
*** otherweb--categories
The number must be set in range from 0 to 100
[[file:images/Otherweb/_20220816_233144screenshot.png]]

*** otherweb--src

[[file:images/Otherweb/_20220816_222549screenshot.png]]
*** otherweb--use-external-curl-p
Default set to nil, use raw Elisp to fetch api, if you use Linux like me and want to a bit faster can set to t.
*** Example of config
#+begin_src elisp
(use-package otherweb
  :config

  (setq otherweb--use-external-curl-p t ) ;; if using linux
  (setq otherweb--sort "informative") ;; sort the most informative news instead of default "recenf"
  (setf (cadr (assoc "politic" otherweb--categories )) 90) ;; default 50, higher point mean less news but more informative, maybe help you avoid fake news
  (progn
    (mapcar (lambda (x)
              (setf (cadr x) nil))
            otherweb--src)
    (setf (cadr (assoc "TheHackersNews" otherweb--src)) t)) ;; Turn off  others src, get only from HackersNews
  )
#+end_src
- Or you can use default customize variable system
** How to install
*** Load otherweb.el from source code
*** Install direct from Github
Example from doom Emacs
#+begin_src elisp
(package! otherweb
  :recipe (:host github :repo "nhannht/emacs-otherweb" ))

(use-package! otherweb)
#+end_src
*** TODO Install from Melpa
